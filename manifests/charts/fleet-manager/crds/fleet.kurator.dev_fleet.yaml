---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: fleet.fleet.kurator.dev
spec:
  group: fleet.kurator.dev
  names:
    categories:
    - kurator-dev
    kind: Fleet
    listKind: FleetList
    plural: fleet
    singular: fleet
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Phase of the fleet
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Fleet represents a group of clusters, it is to consistently manage
          a group of clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FleetSpec defines the desired state of the fleet
            properties:
              clusters:
                description: Clusters represents the clusters that would be registered
                  to the fleet.
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              plugin:
                description: Plugin defines the plugins that would be installed in
                  the fleet.
                properties:
                  grafana:
                    description: Grafana defines the configuration for the grafana
                      installation and observation.
                    properties:
                      chart:
                        description: "Chart defines the helm chart config of the grafana.
                          default values is \n chart: repository: oci://registry-1.docker.io/bitnamicharts
                          name: grafana version: 8.2.33"
                        properties:
                          name:
                            description: Name defines the name of the chart. Default
                              value depends on the kind of the component.
                            type: string
                          repository:
                            description: Repository defines the repository of chart.
                              Default value depends on the kind of the component.
                            type: string
                          version:
                            description: Version defines the version of the chart.
                              Default value depends on the kind of the component.
                            type: string
                        type: object
                      extraArgs:
                        description: "ExtraArgs is the set of extra arguments for
                          Grafana chart. \n For Example, using following configuration
                          to change replica count. extraArgs: grafana: replicaCount:
                          2"
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  metric:
                    description: Metric defines the configuration for the monitoring
                      system installation and metrics collection..
                    properties:
                      prometheus:
                        description: Prometheus defines the configuration for the
                          prometheus installation in the clusters observed by the
                          thanos, by default thanos sidecar will be installed in thanos
                          sidecar mode.
                        properties:
                          chart:
                            description: "Chart defines the helm chart config of the
                              prometheus. default values is \n chart: repository:
                              oci://registry-1.docker.io/bitnamicharts name: kube-prometheus
                              version: 8.9.1"
                            properties:
                              name:
                                description: Name defines the name of the chart. Default
                                  value depends on the kind of the component.
                                type: string
                              repository:
                                description: Repository defines the repository of
                                  chart. Default value depends on the kind of the
                                  component.
                                type: string
                              version:
                                description: Version defines the version of the chart.
                                  Default value depends on the kind of the component.
                                type: string
                            type: object
                          extraArgs:
                            description: "ExtraArgs is the set of extra arguments
                              for Prometheus chart. \n For Example, using following
                              configuration to create a ServiceMonitor to monitor
                              prometheus itself. extraArgs: prometheus: serviceMonitor:
                              enabled: true"
                            x-kubernetes-preserve-unknown-fields: true
                          kubeStateMetrics:
                            description: KubeStateMetrics defines the configuration
                              for the kube-state-metrics.
                            properties:
                              enabled:
                                description: Enabled indicates whether the exporters
                                  are enabled.
                                type: boolean
                            type: object
                          nodeExporter:
                            description: NodeExporter defines the configuration for
                              the node exporter.
                            properties:
                              enabled:
                                description: Enabled indicates whether the exporters
                                  are enabled.
                                type: boolean
                            type: object
                        type: object
                      thanos:
                        description: Thanos defines the configuration for the thanos
                          querier and store gateway.
                        properties:
                          chart:
                            description: "Chart defines the helm chart config of the
                              thanos. default values is \n chart: repository: oci://registry-1.docker.io/bitnamicharts
                              name: thanos version: 12.5.1"
                            properties:
                              name:
                                description: Name defines the name of the chart. Default
                                  value depends on the kind of the component.
                                type: string
                              repository:
                                description: Repository defines the repository of
                                  chart. Default value depends on the kind of the
                                  component.
                                type: string
                              version:
                                description: Version defines the version of the chart.
                                  Default value depends on the kind of the component.
                                type: string
                            type: object
                          extraArgs:
                            description: "ExtraArgs is the set of extra arguments
                              for Thanos chart. \n For Example, using following configuration
                              to enable query frontend. extraArgs: queryFrontend:
                              enabled: true"
                            x-kubernetes-preserve-unknown-fields: true
                          objectStoreConfig:
                            description: 'ObjectStoreConfig is the secret reference
                              of the object store. Configuration must follow the definition
                              of the thanos: https://thanos.io/tip/thanos/storage.md/.'
                            properties:
                              secretName:
                                description: SecretName is the name of the secret
                                  that holds the object store configuration. The path
                                  of object store configuration must be `objstore.yml`
                                type: string
                            required:
                            - secretName
                            type: object
                        required:
                        - objectStoreConfig
                        type: object
                    type: object
                  policy:
                    description: Policy defines the configuration for the ploicy management.
                    properties:
                      kyverno:
                        description: Kyverno defines the configuration for the kyverno
                          installation and policy management.
                        properties:
                          chart:
                            description: 'Chart defines the helm chart config of the
                              kyverno. default values is chart: repository: https://kyverno.github.io/kyverno/
                              name: kyverno version: 3.0.0'
                            properties:
                              name:
                                description: Name defines the name of the chart. Default
                                  value depends on the kind of the component.
                                type: string
                              repository:
                                description: Repository defines the repository of
                                  chart. Default value depends on the kind of the
                                  component.
                                type: string
                              version:
                                description: Version defines the version of the chart.
                                  Default value depends on the kind of the component.
                                type: string
                            type: object
                          extraArgs:
                            description: "ExtraArgs is the set of extra arguments
                              for Grafana chart. \n For Example, using following configuration
                              to change image pull policy. extraArgs: image: pullPolicy:
                              Always"
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity defines the pod security configuration
                              for the kyverno.
                            properties:
                              severity:
                                default: medium
                                description: Severity indicates policy check result
                                  criticality in a policy report.
                                enum:
                                - low
                                - medium
                                - high
                                type: string
                              standard:
                                default: baseline
                                description: 'Standard defines the pod security standard.
                                  More details: https://kubernetes.io/docs/concepts/security/pod-security-standards'
                                enum:
                                - privileged
                                - baseline
                                - restricted
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: FleetStatus defines the observed state of the fleet
            properties:
              credentialSecret:
                description: CredentialSecret is the secret name that holds credentials
                  used for accessing the fleet control plane.
                type: string
              phase:
                description: Phase represents the current phase of fleet. E.g. Pending,
                  Running, Terminating, Failed, Ready, etc.
                type: string
              pluginEndpoints:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginEndpoints is the endpoints of the plugins.
                type: object
              readyClusters:
                description: 'TODO: healthy/unhealthy members cluster Total number
                  of ready clusters, ready to deploy .'
                format: int32
                type: integer
              reason:
                description: A brief CamelCase message indicating details about why
                  the fleet is in this state.
                type: string
              unReadyClusters:
                description: Total number of unready clusters, not ready for use.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
