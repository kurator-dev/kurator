---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: fleet.fleet.kurator.dev
spec:
  group: fleet.kurator.dev
  names:
    categories:
    - kurator-dev
    kind: Fleet
    listKind: FleetList
    plural: fleet
    singular: fleet
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Phase of the fleet
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Fleet represents a group of clusters, it is to consistently manage
          a group of clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FleetSpec defines the desired state of the fleet
            properties:
              clusters:
                description: Clusters represents the clusters that would be registered
                  to the fleet.
                items:
                  description: "ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, \"must refer only to types A and B\" or \"UID not honored\"
                    or \"name must be restricted\". Those cannot be well described
                    when embedded. 3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don't make new APIs embed an underspecified
                    API type they do not control. \n Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    ."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              plugin:
                description: Plugin defines the plugins that would be installed in
                  the fleet.
                properties:
                  backup:
                    description: Backup defines the configuration for the backup engine(Velero).
                    properties:
                      chart:
                        description: "Chart defines the helm chart configuration of
                          the backup engine. The default value is: \n chart: repository:
                          https://vmware-tanzu.github.io/helm-charts name: velero
                          version: 5.0.2"
                        properties:
                          name:
                            description: Name defines the name of the chart. Default
                              value depends on the kind of the component.
                            type: string
                          repository:
                            description: Repository defines the repository of chart.
                              Default value depends on the kind of the component.
                            type: string
                          version:
                            description: Version defines the version of the chart.
                              Default value depends on the kind of the component.
                            type: string
                        type: object
                      extraArgs:
                        description: "ExtraArgs provides the extra chart values for
                          the backup engine chart. For example, use the following
                          configuration to change the image tag or pull policy: \n
                          extraArgs: image: repository: velero/velero tag: v1.11.1
                          pullPolicy: IfNotPresent"
                        x-kubernetes-preserve-unknown-fields: true
                      storage:
                        description: Storage provides details on where the backup
                          data should be stored.
                        properties:
                          location:
                            description: Location specifies where the backup data
                              will be stored.
                            properties:
                              bucket:
                                description: Bucket specifies the storage bucket name.
                                type: string
                              config:
                                additionalProperties:
                                  type: string
                                description: 'Config is a map for additional provider-specific
                                  configurations. #  region: #  s3ForcePathStyle:
                                  #  s3Url: #  kmsKeyId: #  resourceGroup: #  The
                                  ID of the subscription containing the storage account,
                                  if different from the clusterâ€™s subscription. (Azure
                                  only) #  subscriptionId: #  storageAccount: #  publicUrl:
                                  #  Name of the GCP service account to use for this
                                  backup storage location. Specify the #  service
                                  account here if you want to use workload identity
                                  instead of providing the key file.(GCP only) #  serviceAccount:
                                  #  Option to skip certificate validation or not
                                  if insecureSkipTLSVerify is set to be true, the
                                  client side should set the #  flag. For Velero client
                                  Command like velero backup describe, velero backup
                                  logs needs to add the flag --insecure-skip-tls-verify
                                  #  insecureSkipTLSVerify:'
                                type: object
                              endpoint:
                                description: Endpoint provides the endpoint URL for
                                  the storage.
                                type: string
                              provider:
                                description: Provider specifies the storage provider
                                  type (e.g., aws, huaweicloud, gcp, azure).
                                type: string
                              region:
                                description: Region specifies the region of the storage.
                                type: string
                            required:
                            - bucket
                            - endpoint
                            - provider
                            type: object
                          secretName:
                            description: "The structure of the secret varies depending
                              on the object storage provider: \n - For AWS S3, Minio
                              or Huawei Cloud, the secret should contain the following
                              keys: - `access-key`: The access key for S3 authentication.
                              - `secret-key`: The secret key for S3 authentication.
                              \n - For GCP, the secret should be created according
                              to the official GCP documentation. see https://github.com/vmware-tanzu/velero-plugin-for-gcp/blob/main/README.md
                              \n - For Azure, the secret should be created according
                              to the official Azure documentation. see https://github.com/vmware-tanzu/velero-plugin-for-microsoft-azure/blob/main/README.md"
                            type: string
                        required:
                        - location
                        - secretName
                        type: object
                    required:
                    - storage
                    type: object
                  distributedStorage:
                    description: DistributedStorage define the configuration for the
                      distributed storage(Implemented with Rook)
                    properties:
                      chart:
                        description: "Chart defines the helm chart configuration of
                          the distributed storage engine. The default value is: \n
                          chart: repository: https://charts.rook.io/release name:
                          rook version: 1.11.11"
                        properties:
                          name:
                            description: Name defines the name of the chart. Default
                              value depends on the kind of the component.
                            type: string
                          repository:
                            description: Repository defines the repository of chart.
                              Default value depends on the kind of the component.
                            type: string
                          version:
                            description: Version defines the version of the chart.
                              Default value depends on the kind of the component.
                            type: string
                        type: object
                      extraArgs:
                        description: "ExtraArgs provides the extra chart values for
                          rook chart. For example, use the following configuration
                          to change the pull policy: \n extraArgs: image: pullPolicy:
                          Always"
                        x-kubernetes-preserve-unknown-fields: true
                      storage:
                        description: Storage provides detailed settings for unified
                          distributed storage.
                        properties:
                          dataDirHostPath:
                            description: The path on the host where config and data
                              can be persisted. If the storagecluster is deleted,
                              please clean up the configuration files in this file
                              path. e.g. /var/lib/rook
                            pattern: ^/(\S+)
                            type: string
                          manager:
                            description: Manager is the daemon runs alongside monitor
                              daemon,to provide additional monitoring and interfaces
                              to external monitoring and management systems. A spec
                              for mgr related options
                            nullable: true
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: The annotation-related configuration
                                  to add/set on each Pod related object. Including
                                  Podï¼Œ Deployment.
                                nullable: true
                                type: object
                              count:
                                description: Count is the number of manager to run
                                  Default is two, one for use and one for standby.
                                maximum: 2
                                minimum: 1
                                type: integer
                              labels:
                                additionalProperties:
                                  type: string
                                description: The label-related configuration to add/set
                                  on each Pod related object. Including Podï¼Œ Deployment.
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              placement:
                                additionalProperties:
                                  description: Placement is the placement for an object
                                  properties:
                                    nodeAffinity:
                                      description: NodeAffinity is a group of node
                                        affinity scheduling rules
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node matches the corresponding
                                            matchExpressions; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: An empty preferred scheduling
                                              term matches all objects with implicit
                                              weight 0 (i.e. it's a no-op). A null
                                              preferred scheduling term matches no
                                              objects (i.e. is also a no-op).
                                            properties:
                                              preference:
                                                description: A node selector term,
                                                  associated with the corresponding
                                                  weight.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                              weight:
                                                description: Weight associated with
                                                  matching the corresponding nodeSelectorTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - preference
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to an update), the system may or may
                                            not try to eventually evict the pod from
                                            its node.
                                          properties:
                                            nodeSelectorTerms:
                                              description: Required. A list of node
                                                selector terms. The terms are ORed.
                                              items:
                                                description: A null or empty node
                                                  selector term matches no objects.
                                                  The requirements of them are ANDed.
                                                  The TopologySelectorTerm type implements
                                                  a subset of the NodeSelectorTerm.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                              type: array
                                          required:
                                          - nodeSelectorTerms
                                          type: object
                                      type: object
                                    podAffinity:
                                      description: PodAffinity is a group of inter
                                        pod affinity scheduling rules
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node has pods which matches
                                            the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most
                                            preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace".
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                    podAntiAffinity:
                                      description: PodAntiAffinity is a group of inter
                                        pod anti affinity scheduling rules
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            anti-affinity expressions specified by
                                            this field, but it may choose a node that
                                            violates one or more of the expressions.
                                            The node that is most preferred is the
                                            one with the greatest sum of weights,
                                            i.e. for each node that meets all of the
                                            scheduling requirements (resource request,
                                            requiredDuringScheduling anti-affinity
                                            expressions, etc.), compute a sum by iterating
                                            through the elements of this field and
                                            adding "weight" to the sum if the node
                                            has pods which matches the corresponding
                                            podAffinityTerm; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the anti-affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the anti-affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace".
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                    tolerations:
                                      description: The pod this Toleration is attached
                                        to tolerates any taint that matches the triple
                                        <key,value,effect> using the matching operator
                                        <operator>
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                    topologySpreadConstraints:
                                      description: TopologySpreadConstraint specifies
                                        how to spread matching pods among the given
                                        topology
                                      items:
                                        description: TopologySpreadConstraint specifies
                                          how to spread matching pods among the given
                                          topology.
                                        properties:
                                          labelSelector:
                                            description: LabelSelector is used to
                                              find matching pods. Pods that match
                                              this label selector are counted to determine
                                              the number of pods in their corresponding
                                              topology domain.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            description: MatchLabelKeys is a set of
                                              pod label keys to select the pods over
                                              which spreading will be calculated.
                                              The keys are used to lookup values from
                                              the incoming pod labels, those key-value
                                              labels are ANDed with labelSelector
                                              to select the group of existing pods
                                              over which spreading will be calculated
                                              for the incoming pod. Keys that don't
                                              exist in the incoming pod labels will
                                              be ignored. A null or empty list means
                                              only match against labelSelector.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          maxSkew:
                                            description: 'MaxSkew describes the degree
                                              to which pods may be unevenly distributed.
                                              When `whenUnsatisfiable=DoNotSchedule`,
                                              it is the maximum permitted difference
                                              between the number of matching pods
                                              in the target topology and the global
                                              minimum. The global minimum is the minimum
                                              number of matching pods in an eligible
                                              domain or zero if the number of eligible
                                              domains is less than MinDomains. For
                                              example, in a 3-zone cluster, MaxSkew
                                              is set to 1, and pods with the same
                                              labelSelector spread as 2/2/1: In this
                                              case, the global minimum is 1. | zone1
                                              | zone2 | zone3 | |  P P  |  P P  |   P   |
                                              - if MaxSkew is 1, incoming pod can
                                              only be scheduled to zone3 to become
                                              2/2/2; scheduling it onto zone1(zone2)
                                              would make the ActualSkew(3-1) on zone1(zone2)
                                              violate MaxSkew(1). - if MaxSkew is
                                              2, incoming pod can be scheduled onto
                                              any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                              it is used to give higher precedence
                                              to topologies that satisfy it. It''s
                                              a required field. Default value is 1
                                              and 0 is not allowed.'
                                            format: int32
                                            type: integer
                                          minDomains:
                                            description: "MinDomains indicates a minimum
                                              number of eligible domains. When the
                                              number of eligible domains with matching
                                              topology keys is less than minDomains,
                                              Pod Topology Spread treats \"global
                                              minimum\" as 0, and then the calculation
                                              of Skew is performed. And when the number
                                              of eligible domains with matching topology
                                              keys equals or greater than minDomains,
                                              this value has no effect on scheduling.
                                              As a result, when the number of eligible
                                              domains is less than minDomains, scheduler
                                              won't schedule more than maxSkew Pods
                                              to those domains. If value is nil, the
                                              constraint behaves as if MinDomains
                                              is equal to 1. Valid values are integers
                                              greater than 0. When value is not nil,
                                              WhenUnsatisfiable must be DoNotSchedule.
                                              \n For example, in a 3-zone cluster,
                                              MaxSkew is set to 2, MinDomains is set
                                              to 5 and pods with the same labelSelector
                                              spread as 2/2/2: | zone1 | zone2 | zone3
                                              | |  P P  |  P P  |  P P  | The number
                                              of domains is less than 5(MinDomains),
                                              so \"global minimum\" is treated as
                                              0. In this situation, new pod with the
                                              same labelSelector cannot be scheduled,
                                              because computed skew will be 3(3 -
                                              0) if new Pod is scheduled to any of
                                              the three zones, it will violate MaxSkew.
                                              \n This is a beta field and requires
                                              the MinDomainsInPodTopologySpread feature
                                              gate to be enabled (enabled by default)."
                                            format: int32
                                            type: integer
                                          nodeAffinityPolicy:
                                            description: "NodeAffinityPolicy indicates
                                              how we will treat Pod's nodeAffinity/nodeSelector
                                              when calculating pod topology spread
                                              skew. Options are: - Honor: only nodes
                                              matching nodeAffinity/nodeSelector are
                                              included in the calculations. - Ignore:
                                              nodeAffinity/nodeSelector are ignored.
                                              All nodes are included in the calculations.
                                              \n If this value is nil, the behavior
                                              is equivalent to the Honor policy. This
                                              is a alpha-level feature enabled by
                                              the NodeInclusionPolicyInPodTopologySpread
                                              feature flag."
                                            type: string
                                          nodeTaintsPolicy:
                                            description: "NodeTaintsPolicy indicates
                                              how we will treat node taints when calculating
                                              pod topology spread skew. Options are:
                                              - Honor: nodes without taints, along
                                              with tainted nodes for which the incoming
                                              pod has a toleration, are included.
                                              - Ignore: node taints are ignored. All
                                              nodes are included. \n If this value
                                              is nil, the behavior is equivalent to
                                              the Ignore policy. This is a alpha-level
                                              feature enabled by the NodeInclusionPolicyInPodTopologySpread
                                              feature flag."
                                            type: string
                                          topologyKey:
                                            description: TopologyKey is the key of
                                              node labels. Nodes that have a label
                                              with this key and identical values are
                                              considered to be in the same topology.
                                              We consider each <key, value> as a "bucket",
                                              and try to put balanced number of pods
                                              into each bucket. We define a domain
                                              as a particular instance of a topology.
                                              Also, we define an eligible domain as
                                              a domain whose nodes meet the requirements
                                              of nodeAffinityPolicy and nodeTaintsPolicy.
                                              e.g. If TopologyKey is "kubernetes.io/hostname",
                                              each Node is a domain of that topology.
                                              And, if TopologyKey is "topology.kubernetes.io/zone",
                                              each zone is a domain of that topology.
                                              It's a required field.
                                            type: string
                                          whenUnsatisfiable:
                                            description: 'WhenUnsatisfiable indicates
                                              how to deal with a pod if it doesn''t
                                              satisfy the spread constraint. - DoNotSchedule
                                              (default) tells the scheduler not to
                                              schedule it. - ScheduleAnyway tells
                                              the scheduler to schedule the pod in
                                              any location, but giving higher precedence
                                              to topologies that would help reduce
                                              the skew. A constraint is considered
                                              "Unsatisfiable" for an incoming pod
                                              if and only if every possible node assignment
                                              for that pod would violate "MaxSkew"
                                              on some topology. For example, in a
                                              3-zone cluster, MaxSkew is set to 1,
                                              and pods with the same labelSelector
                                              spread as 3/1/1: | zone1 | zone2 | zone3
                                              | | P P P |   P   |   P   | If WhenUnsatisfiable
                                              is set to DoNotSchedule, incoming pod
                                              can only be scheduled to zone2(zone3)
                                              to become 3/2/1(3/1/2) as ActualSkew(2-1)
                                              on zone2(zone3) satisfies MaxSkew(1).
                                              In other words, the cluster can still
                                              be imbalanced, but scheduler won''t
                                              make it *more* imbalanced. It''s a required
                                              field.'
                                            type: string
                                        required:
                                        - maxSkew
                                        - topologyKey
                                        - whenUnsatisfiable
                                        type: object
                                      type: array
                                  type: object
                                description: The placement-related configuration to
                                  pass to kubernetes (affinity, node selector, tolerations).
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          monitor:
                            description: Monitor is the daemon that monitors the status
                              of the ceph cluster. Responsible for collecting cluster
                              information, updating cluster information, and publishing
                              cluster information. Including monmap, osdmap, PGmap,
                              mdsmap, etc. A spec for mon related options
                            nullable: true
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: The annotation-related configuration
                                  to add/set on each Pod related object. Including
                                  Podï¼Œ Deployment.
                                nullable: true
                                type: object
                              count:
                                description: Count is the number of Ceph monitors.
                                  Default is three and preferably an odd number.
                                maximum: 9
                                minimum: 1
                                type: integer
                              labels:
                                additionalProperties:
                                  type: string
                                description: Similar to Annotation, but more graphical
                                  than Annotation. The label-related configuration
                                  to add/set on each Pod related object. Including
                                  Podï¼Œ Deployment.
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              placement:
                                additionalProperties:
                                  description: Placement is the placement for an object
                                  properties:
                                    nodeAffinity:
                                      description: NodeAffinity is a group of node
                                        affinity scheduling rules
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node matches the corresponding
                                            matchExpressions; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: An empty preferred scheduling
                                              term matches all objects with implicit
                                              weight 0 (i.e. it's a no-op). A null
                                              preferred scheduling term matches no
                                              objects (i.e. is also a no-op).
                                            properties:
                                              preference:
                                                description: A node selector term,
                                                  associated with the corresponding
                                                  weight.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                              weight:
                                                description: Weight associated with
                                                  matching the corresponding nodeSelectorTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - preference
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to an update), the system may or may
                                            not try to eventually evict the pod from
                                            its node.
                                          properties:
                                            nodeSelectorTerms:
                                              description: Required. A list of node
                                                selector terms. The terms are ORed.
                                              items:
                                                description: A null or empty node
                                                  selector term matches no objects.
                                                  The requirements of them are ANDed.
                                                  The TopologySelectorTerm type implements
                                                  a subset of the NodeSelectorTerm.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector
                                                      requirements by node's labels.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchFields:
                                                    description: A list of node selector
                                                      requirements by node's fields.
                                                    items:
                                                      description: A node selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key
                                                            that the selector applies
                                                            to.
                                                          type: string
                                                        operator:
                                                          description: Represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists, DoesNotExist.
                                                            Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: An array of
                                                            string values. If the
                                                            operator is In or NotIn,
                                                            the values array must
                                                            be non-empty. If the operator
                                                            is Exists or DoesNotExist,
                                                            the values array must
                                                            be empty. If the operator
                                                            is Gt or Lt, the values
                                                            array must have a single
                                                            element, which will be
                                                            interpreted as an integer.
                                                            This array is replaced
                                                            during a strategic merge
                                                            patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                type: object
                                              type: array
                                          required:
                                          - nodeSelectorTerms
                                          type: object
                                      type: object
                                    podAffinity:
                                      description: PodAffinity is a group of inter
                                        pod affinity scheduling rules
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            affinity expressions specified by this
                                            field, but it may choose a node that violates
                                            one or more of the expressions. The node
                                            that is most preferred is the one with
                                            the greatest sum of weights, i.e. for
                                            each node that meets all of the scheduling
                                            requirements (resource request, requiredDuringScheduling
                                            affinity expressions, etc.), compute a
                                            sum by iterating through the elements
                                            of this field and adding "weight" to the
                                            sum if the node has pods which matches
                                            the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most
                                            preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace".
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                    podAntiAffinity:
                                      description: PodAntiAffinity is a group of inter
                                        pod anti affinity scheduling rules
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: The scheduler will prefer to
                                            schedule pods to nodes that satisfy the
                                            anti-affinity expressions specified by
                                            this field, but it may choose a node that
                                            violates one or more of the expressions.
                                            The node that is most preferred is the
                                            one with the greatest sum of weights,
                                            i.e. for each node that meets all of the
                                            scheduling requirements (resource request,
                                            requiredDuringScheduling anti-affinity
                                            expressions, etc.), compute a sum by iterating
                                            through the elements of this field and
                                            adding "weight" to the sum if the node
                                            has pods which matches the corresponding
                                            podAffinityTerm; the node(s) with the
                                            highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the
                                              matched WeightedPodAffinityTerm fields
                                              are added per-node to find the most
                                              preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity
                                                  term, associated with the corresponding
                                                  weight.
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              weight:
                                                description: weight associated with
                                                  matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                            - podAffinityTerm
                                            - weight
                                            type: object
                                          type: array
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: If the anti-affinity requirements
                                            specified by this field are not met at
                                            scheduling time, the pod will not be scheduled
                                            onto the node. If the anti-affinity requirements
                                            specified by this field cease to be met
                                            at some point during pod execution (e.g.
                                            due to a pod label update), the system
                                            may or may not try to eventually evict
                                            the pod from its node. When there are
                                            multiple elements, the lists of nodes
                                            corresponding to each podAffinityTerm
                                            are intersected, i.e. all terms must be
                                            satisfied.
                                          items:
                                            description: Defines a set of pods (namely
                                              those matching the labelSelector relative
                                              to the given namespace(s)) that this
                                              pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with,
                                              where co-located is defined as running
                                              on a node whose value of the label with
                                              key <topologyKey> matches that of any
                                              node on which a pod of the set of pods
                                              is running
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace".
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          type: array
                                      type: object
                                    tolerations:
                                      description: The pod this Toleration is attached
                                        to tolerates any taint that matches the triple
                                        <key,value,effect> using the matching operator
                                        <operator>
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                    topologySpreadConstraints:
                                      description: TopologySpreadConstraint specifies
                                        how to spread matching pods among the given
                                        topology
                                      items:
                                        description: TopologySpreadConstraint specifies
                                          how to spread matching pods among the given
                                          topology.
                                        properties:
                                          labelSelector:
                                            description: LabelSelector is used to
                                              find matching pods. Pods that match
                                              this label selector are counted to determine
                                              the number of pods in their corresponding
                                              topology domain.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          matchLabelKeys:
                                            description: MatchLabelKeys is a set of
                                              pod label keys to select the pods over
                                              which spreading will be calculated.
                                              The keys are used to lookup values from
                                              the incoming pod labels, those key-value
                                              labels are ANDed with labelSelector
                                              to select the group of existing pods
                                              over which spreading will be calculated
                                              for the incoming pod. Keys that don't
                                              exist in the incoming pod labels will
                                              be ignored. A null or empty list means
                                              only match against labelSelector.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          maxSkew:
                                            description: 'MaxSkew describes the degree
                                              to which pods may be unevenly distributed.
                                              When `whenUnsatisfiable=DoNotSchedule`,
                                              it is the maximum permitted difference
                                              between the number of matching pods
                                              in the target topology and the global
                                              minimum. The global minimum is the minimum
                                              number of matching pods in an eligible
                                              domain or zero if the number of eligible
                                              domains is less than MinDomains. For
                                              example, in a 3-zone cluster, MaxSkew
                                              is set to 1, and pods with the same
                                              labelSelector spread as 2/2/1: In this
                                              case, the global minimum is 1. | zone1
                                              | zone2 | zone3 | |  P P  |  P P  |   P   |
                                              - if MaxSkew is 1, incoming pod can
                                              only be scheduled to zone3 to become
                                              2/2/2; scheduling it onto zone1(zone2)
                                              would make the ActualSkew(3-1) on zone1(zone2)
                                              violate MaxSkew(1). - if MaxSkew is
                                              2, incoming pod can be scheduled onto
                                              any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                              it is used to give higher precedence
                                              to topologies that satisfy it. It''s
                                              a required field. Default value is 1
                                              and 0 is not allowed.'
                                            format: int32
                                            type: integer
                                          minDomains:
                                            description: "MinDomains indicates a minimum
                                              number of eligible domains. When the
                                              number of eligible domains with matching
                                              topology keys is less than minDomains,
                                              Pod Topology Spread treats \"global
                                              minimum\" as 0, and then the calculation
                                              of Skew is performed. And when the number
                                              of eligible domains with matching topology
                                              keys equals or greater than minDomains,
                                              this value has no effect on scheduling.
                                              As a result, when the number of eligible
                                              domains is less than minDomains, scheduler
                                              won't schedule more than maxSkew Pods
                                              to those domains. If value is nil, the
                                              constraint behaves as if MinDomains
                                              is equal to 1. Valid values are integers
                                              greater than 0. When value is not nil,
                                              WhenUnsatisfiable must be DoNotSchedule.
                                              \n For example, in a 3-zone cluster,
                                              MaxSkew is set to 2, MinDomains is set
                                              to 5 and pods with the same labelSelector
                                              spread as 2/2/2: | zone1 | zone2 | zone3
                                              | |  P P  |  P P  |  P P  | The number
                                              of domains is less than 5(MinDomains),
                                              so \"global minimum\" is treated as
                                              0. In this situation, new pod with the
                                              same labelSelector cannot be scheduled,
                                              because computed skew will be 3(3 -
                                              0) if new Pod is scheduled to any of
                                              the three zones, it will violate MaxSkew.
                                              \n This is a beta field and requires
                                              the MinDomainsInPodTopologySpread feature
                                              gate to be enabled (enabled by default)."
                                            format: int32
                                            type: integer
                                          nodeAffinityPolicy:
                                            description: "NodeAffinityPolicy indicates
                                              how we will treat Pod's nodeAffinity/nodeSelector
                                              when calculating pod topology spread
                                              skew. Options are: - Honor: only nodes
                                              matching nodeAffinity/nodeSelector are
                                              included in the calculations. - Ignore:
                                              nodeAffinity/nodeSelector are ignored.
                                              All nodes are included in the calculations.
                                              \n If this value is nil, the behavior
                                              is equivalent to the Honor policy. This
                                              is a alpha-level feature enabled by
                                              the NodeInclusionPolicyInPodTopologySpread
                                              feature flag."
                                            type: string
                                          nodeTaintsPolicy:
                                            description: "NodeTaintsPolicy indicates
                                              how we will treat node taints when calculating
                                              pod topology spread skew. Options are:
                                              - Honor: nodes without taints, along
                                              with tainted nodes for which the incoming
                                              pod has a toleration, are included.
                                              - Ignore: node taints are ignored. All
                                              nodes are included. \n If this value
                                              is nil, the behavior is equivalent to
                                              the Ignore policy. This is a alpha-level
                                              feature enabled by the NodeInclusionPolicyInPodTopologySpread
                                              feature flag."
                                            type: string
                                          topologyKey:
                                            description: TopologyKey is the key of
                                              node labels. Nodes that have a label
                                              with this key and identical values are
                                              considered to be in the same topology.
                                              We consider each <key, value> as a "bucket",
                                              and try to put balanced number of pods
                                              into each bucket. We define a domain
                                              as a particular instance of a topology.
                                              Also, we define an eligible domain as
                                              a domain whose nodes meet the requirements
                                              of nodeAffinityPolicy and nodeTaintsPolicy.
                                              e.g. If TopologyKey is "kubernetes.io/hostname",
                                              each Node is a domain of that topology.
                                              And, if TopologyKey is "topology.kubernetes.io/zone",
                                              each zone is a domain of that topology.
                                              It's a required field.
                                            type: string
                                          whenUnsatisfiable:
                                            description: 'WhenUnsatisfiable indicates
                                              how to deal with a pod if it doesn''t
                                              satisfy the spread constraint. - DoNotSchedule
                                              (default) tells the scheduler not to
                                              schedule it. - ScheduleAnyway tells
                                              the scheduler to schedule the pod in
                                              any location, but giving higher precedence
                                              to topologies that would help reduce
                                              the skew. A constraint is considered
                                              "Unsatisfiable" for an incoming pod
                                              if and only if every possible node assignment
                                              for that pod would violate "MaxSkew"
                                              on some topology. For example, in a
                                              3-zone cluster, MaxSkew is set to 1,
                                              and pods with the same labelSelector
                                              spread as 3/1/1: | zone1 | zone2 | zone3
                                              | | P P P |   P   |   P   | If WhenUnsatisfiable
                                              is set to DoNotSchedule, incoming pod
                                              can only be scheduled to zone2(zone3)
                                              to become 3/2/1(3/1/2) as ActualSkew(2-1)
                                              on zone2(zone3) satisfies MaxSkew(1).
                                              In other words, the cluster can still
                                              be imbalanced, but scheduler won''t
                                              make it *more* imbalanced. It''s a required
                                              field.'
                                            type: string
                                        required:
                                        - maxSkew
                                        - topologyKey
                                        - whenUnsatisfiable
                                        type: object
                                      type: array
                                  type: object
                                description: The placement-related configuration to
                                  pass to kubernetes (affinity, node selector, tolerations).
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          storage:
                            description: A spec for available storage in the cluster
                              and how it should be used
                            nullable: true
                            properties:
                              devices:
                                description: List of devices to use as storage devices
                                  A list of individual device names belonging to this
                                  node to include in the storage cluster e.g. `sda`
                                  or  `/dev/disk/by-id/ata-XXXX`
                                items:
                                  description: Device represents a disk to use in
                                    the cluster
                                  properties:
                                    config:
                                      additionalProperties:
                                        type: string
                                      nullable: true
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    fullpath:
                                      type: string
                                    name:
                                      type: string
                                  type: object
                                nullable: true
                                type: array
                                x-kubernetes-preserve-unknown-fields: true
                              nodes:
                                items:
                                  description: Each individual node can specify configuration
                                    to override the cluster level settings and defaults.
                                    If a node does not specify any configuration then
                                    it will inherit the cluster level settings.
                                  nullable: true
                                  properties:
                                    devices:
                                      description: List of devices to use as storage
                                        devices A list of individual device names
                                        belonging to this node to include in the storage
                                        cluster e.g. `sda` or  `/dev/disk/by-id/ata-XXXX`
                                      items:
                                        description: Device represents a disk to use
                                          in the cluster
                                        properties:
                                          config:
                                            additionalProperties:
                                              type: string
                                            nullable: true
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          fullpath:
                                            type: string
                                          name:
                                            type: string
                                        type: object
                                      nullable: true
                                      type: array
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: Name should match its kubernetes.io/hostname
                                        label
                                      type: string
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                nullable: true
                                type: array
                              useAllNodes:
                                description: indicating if all nodes in the cluster
                                  should be used for storage according to the cluster
                                  level storage selection and configuration values.
                                  If individual nodes are specified under the nodes
                                  field, then useAllNodes must be set to false.
                                type: boolean
                            type: object
                        type: object
                    required:
                    - storage
                    type: object
                  grafana:
                    description: Grafana defines the configuration for the grafana
                      installation and observation.
                    properties:
                      chart:
                        description: "Chart defines the helm chart config of the grafana.
                          default values is \n chart: repository: oci://registry-1.docker.io/bitnamicharts
                          name: grafana version: 8.2.33"
                        properties:
                          name:
                            description: Name defines the name of the chart. Default
                              value depends on the kind of the component.
                            type: string
                          repository:
                            description: Repository defines the repository of chart.
                              Default value depends on the kind of the component.
                            type: string
                          version:
                            description: Version defines the version of the chart.
                              Default value depends on the kind of the component.
                            type: string
                        type: object
                      extraArgs:
                        description: "ExtraArgs is the set of extra arguments for
                          Grafana chart. \n For Example, using following configuration
                          to change replica count. extraArgs: grafana: replicaCount:
                          2"
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  metric:
                    description: Metric defines the configuration for the monitoring
                      system installation and metrics collection..
                    properties:
                      prometheus:
                        description: Prometheus defines the configuration for the
                          prometheus installation in the clusters observed by the
                          thanos, by default thanos sidecar will be installed in thanos
                          sidecar mode.
                        properties:
                          chart:
                            description: "Chart defines the helm chart config of the
                              prometheus. default values is \n chart: repository:
                              oci://registry-1.docker.io/bitnamicharts name: kube-prometheus
                              version: 8.9.1"
                            properties:
                              name:
                                description: Name defines the name of the chart. Default
                                  value depends on the kind of the component.
                                type: string
                              repository:
                                description: Repository defines the repository of
                                  chart. Default value depends on the kind of the
                                  component.
                                type: string
                              version:
                                description: Version defines the version of the chart.
                                  Default value depends on the kind of the component.
                                type: string
                            type: object
                          extraArgs:
                            description: "ExtraArgs is the set of extra arguments
                              for Prometheus chart. \n For Example, using following
                              configuration to create a ServiceMonitor to monitor
                              prometheus itself. extraArgs: prometheus: serviceMonitor:
                              enabled: true"
                            x-kubernetes-preserve-unknown-fields: true
                          kubeStateMetrics:
                            description: KubeStateMetrics defines the configuration
                              for the kube-state-metrics.
                            properties:
                              enabled:
                                description: Enabled indicates whether the exporters
                                  are enabled.
                                type: boolean
                            type: object
                          nodeExporter:
                            description: NodeExporter defines the configuration for
                              the node exporter.
                            properties:
                              enabled:
                                description: Enabled indicates whether the exporters
                                  are enabled.
                                type: boolean
                            type: object
                        type: object
                      thanos:
                        description: Thanos defines the configuration for the thanos
                          querier and store gateway.
                        properties:
                          chart:
                            description: "Chart defines the helm chart config of the
                              thanos. default values is \n chart: repository: oci://registry-1.docker.io/bitnamicharts
                              name: thanos version: 12.5.1"
                            properties:
                              name:
                                description: Name defines the name of the chart. Default
                                  value depends on the kind of the component.
                                type: string
                              repository:
                                description: Repository defines the repository of
                                  chart. Default value depends on the kind of the
                                  component.
                                type: string
                              version:
                                description: Version defines the version of the chart.
                                  Default value depends on the kind of the component.
                                type: string
                            type: object
                          extraArgs:
                            description: "ExtraArgs is the set of extra arguments
                              for Thanos chart. \n For Example, using following configuration
                              to enable query frontend. extraArgs: queryFrontend:
                              enabled: true"
                            x-kubernetes-preserve-unknown-fields: true
                          objectStoreConfig:
                            description: 'ObjectStoreConfig is the secret reference
                              of the object store. Configuration must follow the definition
                              of the thanos: https://thanos.io/tip/thanos/storage.md/.'
                            properties:
                              secretName:
                                description: SecretName is the name of the secret
                                  that holds the object store configuration. The path
                                  of object store configuration must be `objstore.yml`
                                type: string
                            required:
                            - secretName
                            type: object
                        required:
                        - objectStoreConfig
                        type: object
                    type: object
                  policy:
                    description: Policy defines the configuration for the ploicy management.
                    properties:
                      kyverno:
                        description: Kyverno defines the configuration for the kyverno
                          installation and policy management.
                        properties:
                          chart:
                            description: 'Chart defines the helm chart config of the
                              kyverno. default values is chart: repository: https://kyverno.github.io/kyverno/
                              name: kyverno version: 3.0.0'
                            properties:
                              name:
                                description: Name defines the name of the chart. Default
                                  value depends on the kind of the component.
                                type: string
                              repository:
                                description: Repository defines the repository of
                                  chart. Default value depends on the kind of the
                                  component.
                                type: string
                              version:
                                description: Version defines the version of the chart.
                                  Default value depends on the kind of the component.
                                type: string
                            type: object
                          extraArgs:
                            description: "ExtraArgs is the set of extra arguments
                              for Grafana chart. \n For Example, using following configuration
                              to change image pull policy. extraArgs: image: pullPolicy:
                              Always"
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity defines the pod security configuration
                              for the kyverno.
                            properties:
                              severity:
                                default: medium
                                description: Severity indicates policy check result
                                  criticality in a policy report.
                                enum:
                                - low
                                - medium
                                - high
                                type: string
                              standard:
                                default: baseline
                                description: 'Standard defines the pod security standard.
                                  More details: https://kubernetes.io/docs/concepts/security/pod-security-standards'
                                enum:
                                - privileged
                                - baseline
                                - restricted
                                type: string
                              validationFailureAction:
                                default: Audit
                                description: ValidationFailureAction indicates the
                                  action to take when a pod creation fails to validate.
                                  For more info https://kyverno.io/docs/writing-policies/validate/#validation-failure-action
                                enum:
                                - Enforce
                                - Audit
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: FleetStatus defines the observed state of the fleet
            properties:
              credentialSecret:
                description: CredentialSecret is the secret name that holds credentials
                  used for accessing the fleet control plane.
                type: string
              phase:
                description: Phase represents the current phase of fleet. E.g. Pending,
                  Running, Terminating, Failed, Ready, etc.
                type: string
              pluginEndpoints:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginEndpoints is the endpoints of the plugins.
                type: object
              readyClusters:
                description: Total number of ready clusters, ready to deploy .
                format: int32
                type: integer
              reason:
                description: A brief CamelCase message indicating details about why
                  the fleet is in this state.
                type: string
              unReadyClusters:
                description: Total number of unready clusters, not ready for use.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
