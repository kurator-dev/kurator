{{- $altNames := list ( printf "%s.%s" "kurator-webhook-service" .Release.Namespace ) ( printf "%s.%s.svc" "kurator-webhook-service" .Release.Namespace ) -}}
{{- $ca := genCA "kurator-cluster-operator-ca" 365 -}}
{{- $cert := genSignedCert "kurator-cluster-operator" nil $altNames 365 $ca -}}
{{- if and (.Values.autoGenerateCert) (not .Values.certManager.enabled) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app.kubernetes.io/component: webhook
  name: cluster-operator-serving-cert
  namespace: {{ .Release.Namespace }}
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
{{- end}}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    {{- if .Values.certManager.enabled }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/kurator-serving-cert
    {{- end }}
  creationTimestamp: null
  name: cluster-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    {{- if .Values.autoGenerateCert }}
    caBundle: {{ $ca.Cert | b64enc }}
    {{- end }}
    service:
      name: kurator-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /validate-cluster-kurator-dev-v1alpha1-cluster # do not change this
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.cluster.cluster.kurator.dev
  rules:
  - apiGroups:
    - cluster.kurator.dev
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
